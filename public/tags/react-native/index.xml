<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Native on Abdellah Alaoui</title>
    <link>https://abdellah.blog/tags/react-native/</link>
    <description>Recent content in React Native on Abdellah Alaoui</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 13 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://abdellah.blog/tags/react-native/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React Native - Webview communication</title>
      <link>https://abdellah.blog/posts/react-native-webview/</link>
      <pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abdellah.blog/posts/react-native-webview/</guid>
      <description>Introduction There are various cases in which you would want to display a Webview in a mobile app. You may want to display your privacy policy that&amp;rsquo;s present in your website, or you may want to integrate with a service that requires the use of a Webview (HelloSign) &amp;hellip;
Whatever is your usecase, you want the best User Experience. So let&amp;rsquo;s dive in and see how we can communicate back and forth between native and a Webview.</description>
    </item>
    
  </channel>
</rss>